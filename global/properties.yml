---
meta:
  grafana:
    grafanadb:
      scheme:   (( param "Please specify scheme for grafanadb" ))
      host:     (( param "Please specify host for grafanadb" ))
      port:     (( param "Please specify port for grafanadb" ))
      dbname:   (( param "Please specify dbname for grafanadb" ))
      username: (( param "Please specify username for grafanadb" ))
      password: (( vault meta.vault_prefix "/creds/db:password" ))
      session_config: (( param "please specify session_config for db" ))
  shield:
    daemon_public_key: (( param "Please specify the Shield daemon public key" ))

properties:
  alertmanager:
    route:
      receiver: default-receiver
    receivers:
      - name: default-receiver

  prometheus:
    scrape_configs:
      - job_name: node
        static_configs:
          - targets:
            - localhost:9100
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090
      - job_name: pushgateway
        static_configs:
          - targets:
            - localhost:9091

  postgres:
    config:
      port: (( grab meta.grafana.grafanadb.port ))
      listen_addresses: '*'
    hba:
      - host all all 0.0.0.0/0 md5
      - host all all ::/0 md5
    replication:
      enabled: false

  pgpool:
    databases:
      - name: (( grab meta.grafana.grafanadb.dbname ))
        users:
          - (( grab meta.grafana.grafanadb.username ))
        extensions:
          - citext
          - pgcrypto
    users:
      - username: (( grab meta.grafana.grafanadb.username ))
        password: (( grab meta.grafana.grafanadb.password ))

  grafana:
    database:
      type: (( grab meta.grafana.grafanadb.scheme ))
      host: (( concat meta.grafana.grafanadb.host ":" meta.grafana.grafanadb.port ))
      name: (( grab meta.grafana.grafanadb.dbname ))
      user: (( grab meta.grafana.grafanadb.username ))
      password: (( grab meta.grafana.grafanadb.password ))
    session:
      provider: (( grab meta.grafana.grafanadb.scheme ))
      provider_config: (( grab meta.grafana.grafanadb.session_config ))
    security:
      admin_user: admin
      admin_password: (( vault meta.vault_prefix "/creds/grafana:password" ))
      secret_key: (( vault meta.vault_prefix "/creds/grafana:secret_key" ))

  nginx:
    alertmanager:
      auth_username: admin
      auth_password: (( vault meta.vault_prefix "/creds/alertmanager:password" ))
    prometheus:
      auth_username: admin
      auth_password: (( vault meta.vault_prefix "/creds/prometheus:password" ))

  shield:
    agent:
      daemon_public_key: (( grab meta.shield.daemon_public_key ))
